{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","App.tsx","rerenderTree.tsx","Redux/State.tsx","index.tsx","components/Dialogs/Dialogs.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","src","alt","Navbar","nav","item","to","activeClassName","active","Post","props","post","postFromPost","likeCount","MyPosts","postsElement","posts","map","p","likesCount","newPostElement","React","createRef","addPost","textArea","placeholder","ref","button","onClick","current","value","ProfileInfo","content","Profile","DialogItem","path","id","dialog","name","Message","messageDialog","Dialogs","dialogElements","dialogPage","dialogs","d","messagesElements","messages","m","message","sendMessage","dialogItems","newMessage","b","text","alert","App","a","state","profilePage","console","log","render","rerenderTree","ReactDOM","StrictMode","document","getElementById","postText","newPost","push"],"mappings":"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","file":"static/js/main.ec5d4cee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__1X9zP\",\"button\":\"MyPosts_button__1V9q2\",\"addPost\":\"MyPosts_addPost__TdHIt\",\"textArea\":\"MyPosts_textArea__-OaQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2lSjd\",\"item\":\"Navbar_item__bQB6V\",\"active\":\"Navbar_active__1eAA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2LTpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__24ll9\",\"post\":\"Profile_post__uwNkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__26fSk\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <p><img src={'/img/logo.png'} alt=\"\"/>Social Network</p>\r\n            <div className={s.header}>Login</div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Message</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\ntype MessagePostPropsType = {\r\n    postFromPost: string\r\n    likeCount: number\r\n}\r\n\r\nconst Post: React.FC<MessagePostPropsType>= (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={'/img/avatar.png'} alt=''/>\r\n            {props.postFromPost}\r\n            <div>\r\n                <span>like</span>\r\n                {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\n\r\nexport type PostsType = {\r\n    id: number,\r\n    post: string,\r\n    likesCount: number\r\n}\r\n\r\nexport type MyPostsPropsType = {\r\n    posts: Array<PostsType>,\r\n    addPost: (postText: string) => void                         //  gitgit\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n\r\n    let postsElement = props.posts.map(p => <Post postFromPost={p.post} likeCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let addButtonPost = () => {\r\n        if (newPostElement.current) {\r\n            props.addPost(newPostElement.current.value)\r\n        }\r\n        if (newPostElement.current) {                // зануление textarea\r\n            newPostElement.current.value = ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.addPost}>\r\n                <textarea className={s.textArea} placeholder=\"Your New Post\" ref={newPostElement}/>\r\n                <button className={s.button} onClick={addButtonPost}>Add Post</button>\r\n            </div>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.content}>\r\n                <img src=\"https://buddy.ghostpool.com/wp-content/uploads/photodune-3382849-mountain3-s1-1003x480.jpg\"\r\n                     alt=\"\"/>\r\n            </div>\r\n            <div className={s.post}>\r\n                <h3>Latest Activity</h3>\r\n                <div>\r\n                    Avatar+Description\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {PostsType} from '../../Redux/State';\r\n\r\ntype PropsType = {\r\n    posts: Array<PostsType>\r\n    addPost: (postText: string) => void\r\n\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props ) => {\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo/>\r\n            <MyPosts posts={props.posts} addPost={props.addPost}/>               {/*переделать на posts={props.state.posts}*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogItemType = {\r\n    name: string,\r\n    id: number\r\n}\r\n\r\nlet DialogItem = (props: DialogItemType) => {\r\n\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div className={s.dialog}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype MessagePropsType = {\r\n    messageDialog: string\r\n}\r\n\r\nlet Message = (props: MessagePropsType) => {\r\n    return <div className={s.dialog}>{props.messageDialog}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageDialogs from './Message/Message';\r\nimport {DialogPageType} from '../../Redux/State';\r\nimport b from './../Profile/MyPosts/MyPosts.module.css'\r\n\r\ntype DialogsPropsType = {\r\n    dialogPage: DialogPageType\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let dialogElements = props.dialogPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogPage.messages.map(m => <MessageDialogs messageDialog={m.message}/>)\r\n    let sendMessage = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let addButtonMessage = () => {\r\n        let text = sendMessage.current?.value\r\n        alert(text)\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.dialogItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div className={s.newMessage}>\r\n                    <textarea className={s.textArea} placeholder=\"New Message\" ref={sendMessage}/>\r\n                    <button className={b.button} onClick={addButtonMessage}>Send Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Profile from './components/Profile/Profile';\r\nimport Dialogs from './components/Dialogs/Dialogs';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport {RootStateType} from './Redux/State';\r\n\r\n\r\ntype AppPropsType = {\r\n    state: RootStateType,\r\n    addPost: (postText: string) => void\r\n}\r\n\r\nfunction App(props: AppPropsType) {\r\n    let a = props.state.profilePage.posts[0].post\r\n    console.log(a)\r\n\r\n    return <BrowserRouter>\r\n        <div className=\"app-wrapper\">\r\n            <Header/>\r\n            <Navbar/>\r\n            <Route path=\"/dialogs\" render={() => <Dialogs\r\n                dialogPage={props.state.dialogPage}\r\n            />}/>\r\n            <Route path=\"/profile\" render={() => <Profile\r\n                posts={props.state.profilePage.posts}       // переделать на posts={props.state.profilePage}\r\n                addPost={props.addPost}\r\n            />}/>\r\n        </div>\r\n    </BrowserRouter>;\r\n}\r\n\r\nexport default App;\r\n\r\n","import {addPost, RootStateType} from './Redux/State';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\n\r\nexport const rerenderTree = (state: RootStateType) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <App state={state} addPost={addPost}/>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}","import {rerenderTree} from '../rerenderTree';\r\n\r\nexport type PostsType = {\r\n    id: number,\r\n    post: string,\r\n    likesCount: number\r\n}\r\n\r\ntype DialogsType = {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number,\r\n    message: string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n}\r\n\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogsType>,\r\n    messages: Array<MessagesType>\r\n}\r\n\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType,\r\n    dialogPage: DialogPageType\r\n}\r\n\r\nlet state: RootStateType = {\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, post: 'Hi, my name is Artyom and I Front-end developer. I will be glad to job offers.', likesCount: 0},\r\n            {\r\n                id: 2, post: 'I’m a person who is addicted to programming. I have experience ' +\r\n                    'in creating SPA using React/Redux, JS/TS, HTML/CSS. Now I’m improving ' +\r\n                    'my skills and expanding them, learning new technologies. ',\r\n                likesCount: 10\r\n            }\r\n        ]\r\n    },\r\n    dialogPage: {\r\n        dialogs: [\r\n            {id: 1, name: 'Bob'},\r\n            {id: 2, name: 'Den'},\r\n            {id: 3, name: 'Victor'},\r\n            {id: 4, name: 'Valera'},\r\n            {id: 5, name: 'Bill'},\r\n            {id: 6, name: 'Anna'}\r\n        ],\r\n\r\n        messages: [\r\n            {id: 1, message: 'Hi'},\r\n            {id: 2, message: 'How r u?'},\r\n            {id: 3, message: 'Thank`s'}\r\n        ]\r\n    }\r\n}\r\n\r\nexport let addPost = (postText: string) => {\r\n    let newPost: PostsType = {\r\n        id: 5,\r\n        post: postText,\r\n        likesCount: 0\r\n    }\r\n    state.profilePage.posts.push(newPost)\r\n    rerenderTree(state)\r\n}\r\n\r\nexport default state;\r\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport state from './Redux/State';\nimport {rerenderTree} from './rerenderTree';\n\nrerenderTree(state)\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__253d0\",\"dialogItems\":\"Dialogs_dialogItems__4d1JE\",\"textArea\":\"Dialogs_textArea__3QLFU\",\"newMessage\":\"Dialogs_newMessage__36FPt\"};"],"sourceRoot":""}